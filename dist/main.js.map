{"version":3,"sources":["arrow_functions.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["describe('arrow_functions', function () {\n\n    it('should return square value', function () {\n        var square = x => x * x;\n        expect(square(3)).toEqual(9);\n    });\n\n    it('should multiply parameters', function () {\n        var multiply = (x, y) => x * y;\n        expect(multiply(2, 3)).toEqual(6);\n    });\n\n    it('should add parameters', function () {\n        var add = (x, y, z) => {\n            return x + y + z;\n        }\n        expect(add(1, 2, 0)).toEqual(3);\n    });\n\n    it('should double array values', function () {\n        var numbers = [1, 1, 2];\n        var sum = numbers.map(x => x + x);\n        expect(sum).toEqual([2, 2, 4]);\n    });\n\n    it('should return undefined when arrow function is not used', function (done) {\n        this.outerScope = 'outerScope';\n        setTimeout(function () {\n            expect(this.outerScope).toBeUndefined();\n            done();\n        }, 0);\n    });\n\n    it('should return value when arrow function is used', function (done) {\n        this.outerScope = 'outerScope';\n        setTimeout(() => {\n            expect(this.outerScope).toEqual('outerScope');\n            done();\n        }, 0);\n    });\n\n});\n"],"sourceRoot":"/source/"}